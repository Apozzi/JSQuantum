{"version":3,"sources":["components/QuantumSchematics/QuantumSchematicsManager.tsx","components/BlochSphere/BlochSphere.tsx","processing/Qubit.tsx","utils/ArrayUtils.tsx","processing/QuantumLogicGateTrasform.tsx","components/NavBar/CustomGateManager/CustomGateManager.tsx","utils/SimulatorUtils.tsx","components/BlochSphereViewModal/BlochSphereViewModal.tsx","utils/BlochSphereUtils.tsx","components/NavBar/BlochSpheresViewModal/BlochSpheresViewModal.tsx","components/NavBar/CustomGateManager/CustomGate.tsx","components/NavBar/CustomGatesCreationModal/CustomGatesCreationModal.tsx","utils/ColorUtils.tsx","components/NavBar/HSVViewModal/HSVView/HSVView.tsx","components/NavBar/HSVViewModal/HSVViewModal.tsx","components/NavBar/NameChoiceModal/NameChoiceModal.tsx","components/NavBar/QubitsValuesModal/QubitsValuesModal.tsx","utils/FileUtils/FileUtils.tsx","utils/FileUtils/QJSFileUtils.tsx","components/NavBar/NavBar.tsx","components/ToolBox/ToolBox.tsx","utils/FileUtils/LaTeXFileUtils.tsx","utils/FileUtils/AsciiFileUtils.tsx","components/QuantumSchematics/QuantumSchematics.tsx","App.tsx","reportWebVitals.ts","index.tsx","../node_modules/three-js/addons sync /^/.*/.js$"],"names":["QuantumSchematicsManager","cleanSubject","next","gatesObj","openNewSchematicsSubject","updateSubject","projectName","saveSchematicsSubject","exportSchematicsToLaTeXSubject","exportSchematicsToAsciiSubject","this","activePerformanceStatistics","time","schematicsExecutionTime","size","output","setSize","setOutput","qubitsSize","qubitsOutputVector","unsubscribe","Subject","THREE","require","BlochSphere","mount","React","createRef","material","LineBasicMaterial","color","geometry","CircleGeometry","vertices","shift","Line","x","y","z","Geometry","push","Vector3","message","font","TextGeometry","height","Mesh","scene","Scene","camera","OrthographicCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","alpha","props","width","includes","parseInt","current","appendChild","domElement","firstCircle","createACircle","secondCircle","thirdCircle","realValueRadians","realValue","Math","PI","imaginaryValueRadians","imaginaryValue","cos","sin","line","createALine","rotation","FontLoader","load","firstText","createAText","position","secondText","controls","add","isOrthographicCamera","OrbitControls","target","set","update","enabled","animate","requestAnimationFrame","render","style","setTimeout","isActivated","renderThreeJSCanvas","className","ref","Component","Qubit","beta","setAlpha","setBeta","number","ArrayUtils","n","r","i","c","j","math","QuantumLogicGateTrasform","qubits","result","forEach","qubit","tensorProduct","getAlpha","getBeta","inputVector","gateMatrixArray","controlGatesPosition","transformationMatrix","every","matrixArray","identityMatrix","getTransformMatrixWithControlGates","getTransformMatrixWithoutControlGates","vectorByMatrixMultiplication","gateMatrix","gateMatrixLength","length","binaryCombinations","createBinaryCombinationsArray","createIdentityMatrix","pow","binaryCombination","index","matrixLine","isAllControlGateActivated","quantumBit","key","qubitVector","createFromNumber","toVector","flat","matrix","Array","from","e","fill","iy","vx","ix","multiply","q1","q2","qv1","qv2","columnValues","qv1c","qv2c","invSqrt","sqrt","hadamartMatrix","pauliXMatrix","pauliYMatrix","complex","pauliZMatrix","phaseMatrix","CustomGateManager","customGate","createdCustomGates","onChangeSubject","displayCustomGates","documentobj","document","createCloneGate","gateId","clone","getElementById","cloneNode","classList","left","top","zIndex","addGateToTableObj","tableobj","marginTop","setAttribute","onmousedown","cloneFunction","removeChild","updateSchematics","gateObjs","childNodes","filter","obj","id","slice","pop","dragId","onmousemove","d","pageX","pageY","querySelector","onmouseup","tableobjs","getElementsByClassName","isOnTable","a","b","rect1","getBoundingClientRect","rect2","isInHoriztonalBounds","isInVerticalBounds","overlaps","toolbox","parentNode","SimulatorUtils","gateObj","addGateInTable","gate","gateAsStr","getCustomGetIfExists","getMatrix","customGates","getCustomGates","getUuId","simbol","invSqrTwo","qbitRepresentation","combinations","combination","join","totalNumberOfQubits","qbitsOutputVector","qubitIndex","verifyEmpty","squaredValues","map","val","abs","binaryMatrix","reduce","doubleValue","getSpecificQubitPercentage","getPercentageLabel","toFixed","numberInComplexObj","re","im","BlochSphereViewModal","customStyles","content","background","border","padding","state","showModal","label","value","Modal","setAppElement","openSubject","subscribe","setState","isOpen","contentLabel","onRequestClose","handleCloseModal","overlayClassName","onClick","getRealQubitCoordenate","getImaginaryQubitCoordenate","getLabelRealAndImaginaryAValues","getPercentageOfQubitSphere","BlochSphereUtils","BlochSpheresViewModal","openModalSubject","getOutput","openModal","getQubit","binaryCombinationsString","getSize","openDetailedVisualization","getRealCoordenate","getImaginaryCoordenate","CustomGate","name","uuid","setName","setMatrix","generateUniqueId","substring","toUpperCase","Date","now","toString","random","CustomGatesCreationModal","marginLeft","matrixAValue","matrixBValue","matrixCValue","matrixDValue","nameCustomGate","handleInputChange","event","hasSomeInputEmpty","toast","error","addCustomGate","placeholder","onChange","ColorUtils","h","s","v","f","p","q","t","g","floor","round","padStart","HSVView","lenght","BoxGeometry","MeshBasicMaterial","cube","atan","offsetY","columnSize","qubitsVector","ceil","flatHeight","distanceBetweenCubes","zoomSize","qubitPercentage","rgb","hsvToRgb","getHueValueFromQubit","rgbToHexNumber","createACube","edges","EdgesHelper","linewidth","src","HSVViewModal","NameChoiceModal","updateInput","modalResultSubject","reloadSubscription","complete","QubitsValuesModal","getComplexNumberAtIndex","numberAtPos","undefined","getLabelRealAndImaginaryByIndex","getQubitsPercentageLabel","FileUtils","gateSets","gateArray","gateEl","parentElement","split","data","filename","type","file","Blob","navigator","msSaveOrOpenBlob","createElement","url","URL","createObjectURL","href","download","body","click","revokeObjectURL","QJSFileUtils","loadedFile","stopPropagation","preventDefault","files","reader","FileReader","readAsText","onload","evt","parsedObj","JSON","parse","fileArray","getGatesArrayObj","downloadFile","stringify","NavBar","fileUploader","clean","openQjsFile","openFileProccess","readImportedFile","openSchematics","onChangeCustomGates","forceUpdate","saveNewSchematics","exportToLaTeX","exportToAscii","jsonObjString","ExamplesData","examples","example","openExample","subnavs","getExampleSubnav","subnav","indexSub","saveQjsFile","exportLaTeXFormat","exportAsciiFormat","hasCustomGates","isShownCustomGates","hideCustomGates","showCustomGates","getExamplesNav","display","ToolBox","isPlaying","cloneGate","callbackPlaying","togglePlayButton","onMouseDown","onClickGate","concat","getPrefix","LaTeXFileUtils","quantityOfQubits","quantityArray","yNumbers","lengthSize","max","lengthArray","getNodes","getObjectsToDraw","definedNodeLine","find","gatePrefix","getGatePrefix","getControlledGatesLines","linesResult","gatesInLine","controlledGate","isControlGate","objGate","replace","createLaTex","AsciiFileUtils","resultContent","controlledGatesInLine","defineGateSimbolControlled","defineGateSimbolNotControlled","IDENTITY_GATE","firstControlledGateObj","createAscii","QuantumSchematics","quatumColumns","qubitsInputNr","onOpenSchematics","onClean","addAllGatesInTable","onSaveSchematics","exportFile","onExportSchematicsToLatex","onExportSchematicsToAscii","setData","onOpenNewSchematics","onExportSchematicsToLaTeX","onUpdateSchematics","beginProcessingTime","generateOutput","endProcessingTime","setSchematicsExecutionTime","createQubitFromKenetNotation","defineKenetQbitFromNumber","oldOutputState","createInputVectorFromQubits","getQubitsVector","columnsOfGates","querySelectorAll","gates","column","getColumnsOfGates","applyGatesTransformationToInput","_","isEqual","qbitsOutputMatrix","columnOfGates","hasControlGates","arrayOfTransformationMatrix","qGateTransformingByString","transform","qbits","remove","rowIndex","columnIndex","rowFinalIndex","checkGate","tableColumn","children","beginPos","gateChecked","getBeginPos","endPos","getFinalPos","quantityOfGates","quantityOfControlGates","quantityGatesDiferentFromControl","hasDiferentGates","unsubcribeSubjects","changeQubitRotation","i2","isLastRow","hasControllerGateLine","getSpecificQubitMensuramentLabel","addLine","removeLine","isActivePerformanceStatistics","getSchematicsExecutionTime","App","onChangePlayState","code","togglePerformanceStatistics","tabIndex","onKeyDown","onKeyPressed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","StrictMode","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.03dbfab0.chunk.js","sourcesContent":["import { Subject } from \"rxjs\";\r\n\r\nexport default class QuantumSchematicsManager {\r\n\r\n  private static cleanSubject = new Subject();\r\n  private static saveSchematicsSubject = new Subject<String>();\r\n  private static openNewSchematicsSubject = new Subject<any>();\r\n  private static exportSchematicsToLaTeXSubject = new Subject<String>();\r\n  private static exportSchematicsToAsciiSubject = new Subject<String>();\r\n  private static updateSubject = new Subject();\r\n  private static qubitsSize = 0;\r\n  private static qubitsOutputVector : number[] = [];\r\n  private static activePerformanceStatistics = false;\r\n  private static schematicsExecutionTime = 0;\r\n\r\n  static clean() {\r\n    QuantumSchematicsManager.cleanSubject.next();\r\n  }\r\n\r\n  static openSchematics(gatesObj: any) {\r\n    QuantumSchematicsManager.openNewSchematicsSubject.next(gatesObj);\r\n  }\r\n\r\n  static updateSchematics() {\r\n    QuantumSchematicsManager.updateSubject.next();\r\n  }\r\n\r\n  static saveNewSchematics(projectName: String) {\r\n    QuantumSchematicsManager.saveSchematicsSubject.next(projectName);\r\n  }\r\n\r\n  static exportToLaTeX(projectName: String) {\r\n    QuantumSchematicsManager.exportSchematicsToLaTeXSubject.next(projectName);\r\n  }\r\n\r\n  static exportToAscii(projectName: String) {\r\n    QuantumSchematicsManager.exportSchematicsToAsciiSubject.next(projectName);\r\n  }\r\n\r\n  static onClean() {\r\n    return QuantumSchematicsManager.cleanSubject;\r\n  }\r\n\r\n  static onSaveSchematics() {\r\n    return QuantumSchematicsManager.saveSchematicsSubject;\r\n  }\r\n\r\n  static onOpenNewSchematics() {\r\n    return QuantumSchematicsManager.openNewSchematicsSubject;\r\n  }\r\n\r\n  static onUpdateSchematics() {\r\n    return QuantumSchematicsManager.updateSubject;\r\n  }\r\n\r\n  static onExportSchematicsToLaTeX() {\r\n    return QuantumSchematicsManager.exportSchematicsToLaTeXSubject;\r\n  }\r\n\r\n  static onExportSchematicsToAscii() {\r\n    return QuantumSchematicsManager.exportSchematicsToAsciiSubject;\r\n  }\r\n\r\n  static togglePerformanceStatistics() {\r\n    this.activePerformanceStatistics = !this.activePerformanceStatistics;\r\n  }\r\n\r\n  static isActivePerformanceStatistics() {\r\n    return this.activePerformanceStatistics;\r\n  }\r\n  \r\n  static setSchematicsExecutionTime(time: number) {\r\n    this.schematicsExecutionTime = time;\r\n  }\r\n\r\n  static getSchematicsExecutionTime() {\r\n    return this.schematicsExecutionTime;\r\n  }\r\n\r\n  static setData(size: number, output: number[]) {\r\n    this.setSize(size);\r\n    this.setOutput(output);\r\n  }\r\n\r\n  static setSize(size: number) {\r\n    this.qubitsSize = size;\r\n  }\r\n\r\n  static getSize() : number {\r\n    return this.qubitsSize;\r\n  }\r\n\r\n  static setOutput(output: number[]) {\r\n    this.qubitsOutputVector = output;\r\n  }\r\n\r\n  static getOutput() : number[] {\r\n    return this.qubitsOutputVector;\r\n  }\r\n\r\n  static unsubcribeSubjects() {\r\n    QuantumSchematicsManager.cleanSubject.unsubscribe();\r\n    QuantumSchematicsManager.saveSchematicsSubject.unsubscribe();\r\n    QuantumSchematicsManager.openNewSchematicsSubject.unsubscribe();\r\n    QuantumSchematicsManager.exportSchematicsToLaTeXSubject.unsubscribe();\r\n    QuantumSchematicsManager.exportSchematicsToAsciiSubject.unsubscribe();\r\n    QuantumSchematicsManager.updateSubject.unsubscribe();\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport './BlochSphere.css';\r\n\r\nconst THREE = require(\"three-js\")();\r\n\r\nexport default class BlochSphere extends React.Component<{\r\n  isActivated : boolean,\r\n  width: string,\r\n  height: string,\r\n  controls: boolean,\r\n  realValue: number,\r\n  imaginaryValue: number\r\n}> {\r\n  private mount: React.RefObject<HTMLDivElement> = React.createRef<HTMLDivElement>();\r\n  \r\n  createACircle() {\r\n    var radius   = 1,\r\n    segments = 64,\r\n    material = new THREE.LineBasicMaterial( { color: 0xffffff } ),\r\n    geometry = new THREE.CircleGeometry( radius, segments );\r\n    geometry.vertices.shift();\r\n    return new THREE.Line( geometry, material );\r\n  }\r\n\r\n  createALine(x?: number, y?: number, z?:number) {\r\n    const material = new THREE.LineBasicMaterial( { color: 0xff0000 } );\r\n    const geometry = new THREE.Geometry();\r\n    geometry.vertices.push(\r\n      new THREE.Vector3( 0, 0, 0 ),\r\n      new THREE.Vector3( \r\n        x ? x : 0,\r\n        y ? y : 0,\r\n        z ? z : 0\r\n      )\r\n    );\r\n    return new THREE.Line( geometry, material );\r\n  }\r\n\r\n  createAText(message: string, font: any) {\r\n    const geometry = new THREE.TextGeometry( message, {\r\n      font: font,\r\n      size: .07,\r\n      height: 0,\r\n    } );\r\n    const material = new THREE.LineBasicMaterial( { color: 0xffffff } );\r\n    const text =  new THREE.Mesh( geometry, material );\r\n    return text;\r\n  } \r\n\r\n  renderThreeJSCanvas() {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.OrthographicCamera( window.innerWidth / - 800, window.innerWidth / 800, \r\n      window.innerHeight / 800, window.innerHeight / - 800, 0.01, 1000 );\r\n    const renderer = new THREE.WebGLRenderer( { alpha: true } );\r\n    if (!this.props.width.includes(\"%\") && !this.props.height.includes(\"%\")) \r\n      renderer.setSize( parseInt(this.props.width), parseInt(this.props.height) );\r\n    else \r\n      renderer.setSize( window.innerWidth, window.innerHeight );\r\n    this.mount.current!.appendChild( renderer.domElement );\r\n    const firstCircle = this.createACircle();\r\n    const secondCircle = this.createACircle();\r\n    const thirdCircle = this.createACircle();\r\n    const realValueRadians = this.props.realValue * Math.PI;\r\n    const imaginaryValueRadians = this.props.imaginaryValue * Math.PI + Math.PI/ 2;\r\n    const x = Math.cos(imaginaryValueRadians);\r\n    const y = Math.cos(realValueRadians) * Math.sin(imaginaryValueRadians);\r\n    const z = Math.sin(realValueRadians) * Math.sin(imaginaryValueRadians);\r\n    const line = this.createALine(x, y, z );\r\n    secondCircle.rotation.x = Math.PI / 2;\r\n    thirdCircle.rotation.y = Math.PI / 2;\r\n    const loader = new THREE.FontLoader();\r\n    loader.load('https://threejsfundamentals.org/threejs/resources/threejs/fonts/helvetiker_regular.typeface.json', (font: any) => {\r\n      const firstText = this.createAText(\"l0>\", font);\r\n      firstText.position.y = 1.1;\r\n      const secondText = this.createAText(\"l1>\", font);\r\n      secondText.position.y = -1.1;\r\n      if (this.props.controls) {\r\n        scene.add(firstText);\r\n        scene.add(secondText);\r\n      }\r\n    } );\r\n    scene.add( firstCircle );\r\n    scene.add( secondCircle );\r\n    scene.add( thirdCircle );\r\n    scene.add( line );\r\n    camera.position.z = 5;\r\n    camera.isOrthographicCamera = true;\r\n    camera.position.x = 1;\r\n    camera.position.y = 1;\r\n    const controls = new OrbitControls( camera, renderer.domElement );\r\n    controls.target.set( 0, 0, 0 );\r\n    controls.update();\r\n    controls.enabled = this.props.controls;\r\n    const animate = () => {\r\n      requestAnimationFrame( animate );\r\n      renderer.render( scene, camera );\r\n      if (renderer.domElement) {\r\n        renderer.domElement.style.width = this.props.width;\r\n        renderer.domElement.style.height = this.props.height;\r\n      }\r\n    };\r\n\r\n    animate();\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      if (this.mount.current && this.props.isActivated) {\r\n        this.renderThreeJSCanvas();\r\n      }\r\n    }, 300);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bloch-sphere-view--canvas_center\" ref={this.mount} />\r\n    )\r\n  }\r\n\r\n}","\r\nexport default class Qubit {\r\n    alpha: any;\r\n    beta: any;\r\n\r\n    constructor(alpha: any, beta: any) {\r\n        this.setAlpha(alpha);\r\n        this.setBeta(beta);\r\n    }\r\n\r\n    setAlpha(alpha: any) {\r\n        this.alpha = alpha;\r\n    }\r\n\r\n    setBeta(beta: any) {\r\n        this.beta = beta;\r\n    }\r\n\r\n    getAlpha() {\r\n        return this.alpha;\r\n    }\r\n\r\n    getBeta() {\r\n        return this.beta;\r\n    }\r\n\r\n    toVector() {\r\n        return [[this.alpha],[this.beta]];\r\n    }\r\n\r\n    static createFromNumber(number: number) {\r\n        return new Qubit(1 - number, number);\r\n    }\r\n    \r\n}\r\n","export default class ArrayUtils {\r\n\r\n    public static createBinaryCombinationsArray(n: number): number[][] {\r\n        /* Utiliza de \"manipulaçoes de bits\" para criar o vetor, sem demais explanações.\r\n           Exemplo saída [[00][01][10][11]] */\r\n        const r = [];\r\n        for(let i = 0; i < (1 << n); i++) {\r\n            const c = [];\r\n            for(let j = 0; j < n; j++) {\r\n            c.push(i & (1 << j) ? 1 : 0);  \r\n            }\r\n            r.push(c);\r\n        }\r\n        return r;\r\n    }\r\n\r\n}","import ArrayUtils from \"../utils/ArrayUtils\";\r\nimport Qubit from \"./Qubit\";\r\nconst math = require('mathjs');\r\n\r\n\r\nexport default class QuantumLogicGateTrasform {\r\n\r\n    private static readonly invSqrt = 1 / Math.sqrt(2);\r\n\r\n    public static readonly identityMatrix = [[1, 0], [0, 1]];\r\n    public static readonly hadamartMatrix = [\r\n        [QuantumLogicGateTrasform.invSqrt, \r\n        QuantumLogicGateTrasform.invSqrt], \r\n        [QuantumLogicGateTrasform.invSqrt, \r\n        -QuantumLogicGateTrasform.invSqrt]\r\n    ];\r\n    public static readonly pauliXMatrix = [[0, 1], [1, 0]];\r\n    public static readonly pauliYMatrix = [[0, math.complex(0, -1)], [math.complex(0, 1), 0]];;\r\n    public static readonly pauliZMatrix = [[1, 0], [0, -1]];\r\n    public static readonly phaseMatrix = [[1, 0], [0, math.complex(0, 1)]];\r\n\r\n    public static createInputVectorFromQubits(qubits: Array<Qubit>): number[][] {\r\n        let result : number[][] = [[1]];\r\n        qubits.forEach(qubit => {\r\n            result = this.tensorProduct([[qubit.getAlpha()], [qubit.getBeta()]], result);\r\n        });\r\n        return result;\r\n    }\r\n\r\n    public static transform(inputVector: number[][], gateMatrixArray: number[][][], controlGatesPosition?: boolean[]) : number[][] {\r\n        let transformationMatrix : number[][] = [[1]];\r\n        if (gateMatrixArray.every(matrixArray => matrixArray === this.identityMatrix)) return inputVector;\r\n        if (controlGatesPosition) {\r\n            transformationMatrix = this.getTransformMatrixWithControlGates(gateMatrixArray, transformationMatrix, controlGatesPosition);\r\n        } else {\r\n            transformationMatrix = this.getTransformMatrixWithoutControlGates(gateMatrixArray, transformationMatrix);\r\n        }\r\n        return this.vectorByMatrixMultiplication(inputVector, transformationMatrix);\r\n    }\r\n\r\n    private static getTransformMatrixWithoutControlGates(gateMatrixArray: number[][][], transformationMatrix: number[][]) {\r\n        gateMatrixArray.forEach(gateMatrix => {\r\n            transformationMatrix = this.tensorProduct(gateMatrix, transformationMatrix);\r\n        });\r\n        return transformationMatrix;\r\n    }\r\n\r\n    private static getTransformMatrixWithControlGates(gateMatrixArray: number[][][], transformationMatrix: number[][], controlGatesPosition: boolean[]) {\r\n        const gateMatrixLength = gateMatrixArray.length;\r\n        const binaryCombinations = ArrayUtils.createBinaryCombinationsArray(gateMatrixLength);\r\n        transformationMatrix = this.createIdentityMatrix(math.pow(2, gateMatrixLength));\r\n        binaryCombinations.forEach((binaryCombination: number[], index: number) => {\r\n            let matrixLine = [[1]];\r\n            const isAllControlGateActivated = binaryCombination.every((qubit, index) => !controlGatesPosition[index] || !!qubit == controlGatesPosition[index]);\r\n            binaryCombination.forEach((quantumBit: number, key: number) => {\r\n                let qubitVector = Qubit.createFromNumber(quantumBit).toVector();\r\n                if (isAllControlGateActivated) qubitVector = this.vectorByMatrixMultiplication(qubitVector, gateMatrixArray[key]);\r\n                matrixLine = this.tensorProduct(qubitVector, matrixLine);\r\n            });\r\n            transformationMatrix[index] = matrixLine.flat();\r\n        });\r\n        return transformationMatrix;\r\n    }\r\n\r\n    private static vectorByMatrixMultiplication(inputVector: number[][], matrix: number[][]) : number[][] {\r\n        let result: number[][] = Array.from({length: matrix.length}, e => Array(inputVector[0].length).fill(0));\r\n        for (let iy = 0; iy < matrix.length; iy++) {\r\n            inputVector[iy].forEach(function (vx, key) {\r\n                for (let ix = 0; ix < matrix.length; ix++) {\r\n                    result[ix][key] = math.add(result[ix][key], math.multiply(vx, matrix[iy][ix])) \r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private static tensorProduct(q1: number[][], q2: number[][]): number[][] {\r\n        const result : number[][] = [];\r\n        for (let qv1 of q1) {\r\n            for (let qv2 of q2) {\r\n                let columnValues = [];\r\n                for (let qv1c of qv1) {\r\n                    for (let qv2c of qv2) {\r\n                        columnValues.push(math.multiply(qv1c, qv2c));\r\n                    }\r\n                }\r\n                result.push(columnValues);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private static createIdentityMatrix(length: number): number[][] {\r\n        let result: number[][] = Array.from({length: length}, e => Array(length).fill(0));\r\n        for (let i = 0; i < length; i++) result[i][i] = 1;\r\n        return result;\r\n    }\r\n\r\n   \r\n \r\n}\r\n","import { Subject } from \"rxjs\";\r\nimport CustomGate from \"./CustomGate\";\r\n\r\nexport default class CustomGateManager {\r\n    private static createdCustomGates: CustomGate[] = [];\r\n    private static displayCustomGates = false;\r\n    private static onChangeSubject = new Subject();\r\n\r\n    static addCustomGate(customGate: CustomGate) {\r\n        this.createdCustomGates.push(customGate);\r\n        this.onChangeSubject.next();\r\n    }\r\n\r\n    static getCustomGates() {\r\n        return this.createdCustomGates;\r\n    }\r\n\r\n    static hasCustomGates() {\r\n        return this.createdCustomGates.length !== 0;\r\n    }\r\n\r\n    static showCustomGates() {\r\n        this.displayCustomGates = true;\r\n        this.onChangeSubject.next();\r\n    }\r\n\r\n    static hideCustomGates() {\r\n        this.displayCustomGates = false;\r\n        this.onChangeSubject.next();\r\n    }\r\n\r\n    static isShownCustomGates() {\r\n        return this.displayCustomGates;\r\n    }\r\n\r\n    static onChangeCustomGates() {\r\n        return this.onChangeSubject;\r\n    }\r\n\r\n}\r\n","import Qubit from \"../processing/Qubit\";\r\nimport QuantumLogicGateTrasform from \"../processing/QuantumLogicGateTrasform\";\r\nimport QuantumSchematicsManager from \"../components/QuantumSchematics/QuantumSchematicsManager\";\r\nimport ArrayUtils from \"./ArrayUtils\";\r\nimport CustomGateManager from \"../components/NavBar/CustomGateManager/CustomGateManager\";\r\nconst math = require('mathjs');\r\n\r\nconst documentobj: any = document ? document : {};\r\n\r\nconst overlaps = (a: any, b: any) => {\r\n  if (a === null || b === null) return false;\r\n  const rect1 = a.getBoundingClientRect();\r\n  const rect2 = b.getBoundingClientRect();\r\n  const isInHoriztonalBounds =\r\n    rect1.x < rect2.x + rect2.width && rect1.x + rect1.width > rect2.x;\r\n  const isInVerticalBounds =\r\n    rect1.y < rect2.y + rect2.height && rect1.y + rect1.height > rect2.y;\r\n  const isOverlapping = isInHoriztonalBounds && isInVerticalBounds;\r\n  return isOverlapping;\r\n}\r\n\r\nconst createCloneGate = (gateId: String) => {\r\n    let clone = documentobj.getElementById(gateId).cloneNode( true )\r\n    clone.classList.add(\"gateSet\");\r\n    clone.style.position = \"absolute\";\r\n    clone.style.left = '-400px';\r\n    clone.style.top = '-400px';\r\n    clone.style.zIndex = \"999\";\r\n    return clone;\r\n}\r\n\r\nconst addGateToTableObj = (gateId:String, clone: any, tableobj: any) => {\r\n    clone.style.marginTop = \"-87px\";\r\n    clone.style.top = \"50px\";\r\n    clone.style.left = \"0px\";\r\n    clone.style.position = \"relative\";\r\n    clone.style.zIndex = \"10\";\r\n    clone.setAttribute( 'id', gateId + \"Set\" );\r\n    clone.onmousedown = (e : any) => {\r\n        cloneFunction(gateId);\r\n        tableobj.removeChild(clone);\r\n        QuantumSchematicsManager.updateSchematics();\r\n    }\r\n    let gateObjs = Array.from(tableobj.childNodes).filter((obj : any) => obj.id !== \"controlline\");\r\n    if (gateObjs.length > 1) {\r\n        tableobj.removeChild(gateObjs.slice(-1).pop() as Node);\r\n    }\r\n\r\n    tableobj.appendChild(clone);\r\n    QuantumSchematicsManager.updateSchematics();\r\n}\r\n\r\nconst cloneFunction = (gateId : String) => {\r\n  let dragId = gateId + \"Drag\";\r\n  let clone = createCloneGate(gateId);\r\n  clone.setAttribute( 'id', dragId );\r\n  documentobj.onmousemove = (e: any) => {\r\n    let d = documentobj.getElementById(dragId);\r\n    if (d) {\r\n        d.style.left = e.pageX - 38 +'px';\r\n        d.style.top = e.pageY - 38 +'px';\r\n    }\r\n  };\r\n  documentobj.querySelector('.toolbox').appendChild( clone );\r\n  documentobj.onmouseup = (e: any) => {\r\n    documentobj.onmousemove = () => {};\r\n    let tableobjs = document.getElementsByClassName('table-box');\r\n    let isOnTable = false\r\n    Array.from(tableobjs).forEach(tableobj => {\r\n      if (overlaps(clone, tableobj)) {\r\n        isOnTable = true;\r\n        addGateToTableObj(gateId, clone, tableobj);\r\n      }\r\n    });\r\n    const toolbox = documentobj.querySelector('.toolbox');\r\n    if (clone && !isOnTable && clone.parentNode === toolbox) {\r\n      toolbox.removeChild(clone);\r\n      clone = null;\r\n    }\r\n  };\r\n}\r\n\r\n\r\nexport default class SimulatorUtils {\r\n    public static cloneGate(gateId : String) {\r\n        cloneFunction(gateId);\r\n    }\r\n\r\n    public static addAllGatesInTable(gatesObj: any) {\r\n        for (let gateObj of gatesObj) {\r\n            SimulatorUtils.addGateInTable(gateObj.gate, gateObj.x, gateObj.y);\r\n        }\r\n    }\r\n\r\n    private static addGateInTable(gateId : String, x: number, y: number) {\r\n        let clone = createCloneGate(gateId);\r\n        let tableobjs = document.getElementById(`table-box_${x}_${y}`);\r\n        addGateToTableObj(gateId, clone, tableobjs);\r\n    }\r\n\r\n    public static qGateTransformingByString(gateAsStr: String) : number[][] {\r\n        switch (gateAsStr) {\r\n            case \"HGateSet\":\r\n                return QuantumLogicGateTrasform.hadamartMatrix;\r\n            case \"XGateSet\":\r\n                return QuantumLogicGateTrasform.pauliXMatrix;\r\n            case \"YGateSet\":\r\n                return QuantumLogicGateTrasform.pauliYMatrix;\r\n            case \"ZGateSet\":\r\n                return QuantumLogicGateTrasform.pauliZMatrix;\r\n            case \"SGateSet\":\r\n                return QuantumLogicGateTrasform.phaseMatrix;\r\n            case \"TGateSet\":\r\n                 return QuantumLogicGateTrasform.identityMatrix;\r\n            default:\r\n                const customGate = this.getCustomGetIfExists(gateAsStr);\r\n                if (customGate) \r\n                    return customGate.getMatrix();\r\n                else \r\n                    return QuantumLogicGateTrasform.identityMatrix;\r\n        }\r\n    }\r\n\r\n    private static getCustomGetIfExists(gateAsStr: String) {\r\n        const customGates = CustomGateManager.getCustomGates();\r\n        for (let customGate of customGates) {\r\n            if (`${customGate.getUuId()}-CustomGateSet` === gateAsStr) {\r\n                return customGate;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static isControlGate(gate: String) {\r\n        return gate === \"ControlGateSet\" || gate === \"ControlGate\";\r\n    }\r\n    \r\n    public static createQubitFromKenetNotation(simbol : String) : Qubit {\r\n        const invSqrTwo = 1 / Math.sqrt(2);\r\n        let alpha = 0;\r\n        let beta = 0;\r\n        switch (simbol) {\r\n            case '|0⟩':\r\n                alpha = 1;\r\n                beta = 0;\r\n                break;\r\n            case '|1⟩':\r\n                alpha = 0;\r\n                beta = 1;\r\n                break;\r\n            case '|+⟩':\r\n                alpha = invSqrTwo;\r\n                beta = invSqrTwo;\r\n                break;\r\n            case '|-⟩':\r\n                alpha = invSqrTwo;\r\n                beta = -invSqrTwo;\r\n                break;\r\n            case '|i⟩':\r\n                alpha = invSqrTwo;\r\n                beta = math.complex(0, invSqrTwo);\r\n                break;\r\n            case '|-i⟩':\r\n                alpha = invSqrTwo;\r\n                beta = math.complex(0, -invSqrTwo);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return new Qubit(alpha, beta);\r\n    }\r\n\r\n    public static defineKenetQbitFromNumber(qbitRepresentation : number) {\r\n        return ['|0⟩', '|1⟩', '|+⟩', '|-⟩', '|i⟩', '|-i⟩'][qbitRepresentation];\r\n    }\r\n\r\n    public static binaryCombinationsString(n: number): string[] {\r\n        const combinations = ArrayUtils.createBinaryCombinationsArray(n).slice(0) as any;\r\n        for (let combination of combinations) {\r\n            combination = combination.join('');\r\n        }\r\n        return combinations;  \r\n    }\r\n\r\n    private static verifyEmpty(totalNumberOfQubits: any, qbitsOutputVector: any) {\r\n        return (math.pow(2, totalNumberOfQubits) !== qbitsOutputVector.length);\r\n    }\r\n\r\n    public static getSpecificQubitPercentage(qbitsOutputVector: number[], totalNumberOfQubits: number, qubitIndex: number) : number {\r\n        if (this.verifyEmpty(totalNumberOfQubits, qbitsOutputVector)) return 0;\r\n        const squaredValues = qbitsOutputVector.map(val => math.abs(math.pow(val, 2)));\r\n        const binaryMatrix = ArrayUtils.createBinaryCombinationsArray(totalNumberOfQubits);\r\n        return squaredValues.reduce((a, b, i) => math.add(a, (binaryMatrix[i][qubitIndex]) ? b : 0), 0);\r\n    }\r\n\r\n    public static getSpecificQubitMensuramentLabel(qbitsOutputVector: number[], totalNumberOfQubits: number, index: number) {\r\n        const doubleValue = SimulatorUtils.getSpecificQubitPercentage(qbitsOutputVector, totalNumberOfQubits, index);\r\n        return this.getPercentageLabel(index, doubleValue);\r\n    }\r\n\r\n    public static getPercentageLabel(index: number, doubleValue: number) {\r\n        if (index !== null) {\r\n            return (math.abs(doubleValue)*100).toFixed(2) + \"%\";\r\n        }\r\n        return \"0.00%\";\r\n    }\r\n\r\n    public static getLabelRealAndImaginaryAValues(numberInComplexObj: number) {\r\n        return `${math.re(numberInComplexObj).toFixed(2)} + ${math.im(numberInComplexObj).toFixed(2)}i`;\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { Subject } from 'rxjs';\r\nimport BlockSphere from '../../components/BlochSphere/BlochSphere';\r\nimport SimulatorUtils from '../../utils/SimulatorUtils';\r\nimport './BlochSphereViewModal.css';\r\n\r\nconst math = require('mathjs');\r\n\r\nexport default class BlochSphereViewModal extends React.Component<any> {\r\n  static openSubject = new Subject();\r\n\r\n  customStyles = {\r\n    content : {\r\n      height: '80%',\r\n      background: '#373b44',\r\n      border: 'none',\r\n      padding: \"0px\"\r\n    }\r\n  };\r\n\r\n  state = {\r\n    showModal: false,\r\n    label: '',\r\n    value: 0,\r\n    index: 0\r\n  };\r\n\r\n  static openModal(obj: any) {\r\n    this.openSubject.next(obj);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    Modal.setAppElement('#app');\r\n    BlochSphereViewModal.openSubject.subscribe((obj: any) => {\r\n      this.setState({\r\n        showModal: true,\r\n        label: obj?.label,\r\n        value: obj?.value,\r\n        index: obj?.index\r\n      });\r\n    });\r\n  }\r\n\r\n  handleCloseModal (value: any) {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n  getRealQubitCoordenate() {\r\n    return math.pow(math.re(this.state.value),2);\r\n  }\r\n\r\n  getImaginaryQubitCoordenate() {\r\n    return math.pow(math.im(this.state.value),2);\r\n  }\r\n\r\n  getPercentageOfQubitSphere() {\r\n    return SimulatorUtils.getPercentageLabel(this.state.index, math.pow(this.state.value, 2));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n           isOpen={this.state.showModal}\r\n           contentLabel=\"Project\"\r\n           style={this.customStyles}\r\n           onRequestClose={() => this.handleCloseModal(null)}\r\n           overlayClassName=\"overlay\"\r\n        >\r\n          <div className=\"modal-header\">\r\n            <div className=\"modal-title\">\r\n              Visualização esfera de Bloch do Qubit\r\n            </div>\r\n            <div className=\"modal-close-icon\" onClick={() => this.handleCloseModal(null)}>\r\n              X\r\n            </div>\r\n          </div>\r\n          <div className=\"bloch-sphere-view-modal--tip\">Arraste para rotacionar a esfera.</div>\r\n          <div className=\"bloch-sphere-view-modal--qubit-title\">Qubit |{this.state.label}⟩</div>\r\n          <BlockSphere isActivated={this.state.showModal} realValue={this.getRealQubitCoordenate()} imaginaryValue={this.getImaginaryQubitCoordenate()} height=\"70%\" width=\"70%\" controls={true}></BlockSphere>\r\n          <div className=\"bloch-sphere-view-modal--description\">\r\n            <div>Valor: {SimulatorUtils.getLabelRealAndImaginaryAValues(this.state.value)}</div>\r\n            <div>Porcentagem: {this.getPercentageOfQubitSphere()}</div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}","const math = require('mathjs');\r\n\r\nexport default class BlochSphereUtils {\r\n    public static getRealCoordenate(qubit: any) {\r\n        return math.pow(math.re(qubit),2);\r\n    }\r\n\r\n    public static getImaginaryCoordenate(qubit: any) {\r\n        return math.pow(math.im(qubit),2);\r\n    }\r\n}","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { Subject } from 'rxjs';\r\nimport QuantumSchematicsManager from '../../QuantumSchematics/QuantumSchematicsManager';\r\nimport BlochSphereViewModal from '../../BlochSphereViewModal/BlochSphereViewModal';\r\nimport BlockSphere from '../../BlochSphere/BlochSphere';\r\nimport SimulatorUtils from '../../../utils/SimulatorUtils';\r\nimport './BlochSpheresViewModal.css';\r\nimport BlochSphereUtils from '../../../utils/BlochSphereUtils';\r\n\r\nconst math = require('mathjs');\r\n\r\nexport default class BlochSpheresViewModal extends React.Component<any> {\r\n  static openModalSubject = new Subject();\r\n\r\n  customStyles = {\r\n    content : {\r\n      height: '80%',\r\n      background: '#373b44',\r\n      border: 'none',\r\n      padding: \"0px\"\r\n    }\r\n  };\r\n\r\n  state = {\r\n    showModal: false\r\n  };\r\n\r\n  static openModal() {\r\n    this.openModalSubject.next();\r\n  }\r\n\r\n  componentDidMount() {\r\n    Modal.setAppElement('#app');\r\n    BlochSpheresViewModal.openModalSubject.subscribe(() => {\r\n      this.setState({ showModal: true });\r\n    });\r\n  }\r\n\r\n  handleCloseModal (value: any) {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n  private getQubit(index: number) {\r\n    const qubit = QuantumSchematicsManager.getOutput()[index];\r\n    return qubit ? qubit : 0;\r\n  }\r\n\r\n  openDetailedVisualization(label: string, index: number) {\r\n    this.handleCloseModal(null);\r\n    BlochSphereViewModal.openModal({\r\n      label,\r\n      value: this.getQubit(index),\r\n      index\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    BlochSpheresViewModal.openModalSubject.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BlochSphereViewModal></BlochSphereViewModal>\r\n        <Modal\r\n           isOpen={this.state.showModal}\r\n           contentLabel=\"Project\"\r\n           style={this.customStyles}\r\n           onRequestClose={() => this.handleCloseModal(null)}\r\n           overlayClassName=\"overlay\"\r\n        >\r\n        <div className=\"modal-header\">\r\n          <div className=\"modal-title\">\r\n            Visualização através da esfera de Bloch\r\n          </div>\r\n          <div className=\"modal-close-icon\" onClick={() => this.handleCloseModal(null)}>\r\n            X\r\n          </div>\r\n        </div>\r\n        {SimulatorUtils.binaryCombinationsString(QuantumSchematicsManager.getSize()).map((label: string, i: number) =>\r\n              <div className=\"bloch-spheres-view-modal-content--qubit\" key={i}>\r\n                <div className=\"bloch-spheres-view-modal--qubit\">\r\n                  {i}\r\n                </div>\r\n                <div className=\"bloch-spheres-view-modal--qubit\">\r\n                  |{label}⟩\r\n                </div>\r\n                <button className=\"bloch-sphere-view-modal--button\" onClick={() => this.openDetailedVisualization(label, i)}>Ver detalhes</button>\r\n                <div className=\"bloch-spheres-view-modal--qubit bloch-spheres-view-modal-close-box--qubit\">\r\n                  <BlockSphere isActivated={this.state.showModal} realValue={BlochSphereUtils.getRealCoordenate(this.getQubit(i))} imaginaryValue={BlochSphereUtils.getImaginaryCoordenate(this.getQubit(i))} height=\"150px\" width=\"250px\" controls={false}></BlockSphere>\r\n                </div>\r\n              </div>\r\n          )}\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}","\r\nexport default class CustomGate {\r\n    name: string = \"\";\r\n    matrix: number[][] = [];\r\n    uuid: string = \"\";\r\n\r\n    constructor(name: string, matrix: number[][]) {\r\n        this.setName(name);\r\n        this.setMatrix(matrix);\r\n        this.uuid = this.generateUniqueId();\r\n    }\r\n\r\n    setName(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    setMatrix(matrix: number[][]) {\r\n        this.matrix = matrix;\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getMatrix() {\r\n        return this.matrix;\r\n    }\r\n\r\n    getUuId() {\r\n        return this.uuid;\r\n    }\r\n\r\n    getPrefix() {\r\n        return this.name.substring(0,2).toUpperCase();\r\n    }\r\n\r\n    private generateUniqueId() {\r\n        return Date.now().toString(36) + Math.random().toString(36).substring(2)\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { Subject } from 'rxjs';\r\nimport CustomGate from '../CustomGateManager/CustomGate';\r\nimport CustomGateManager from '../CustomGateManager/CustomGateManager';\r\nimport './CustomGatesCreationModal.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst math = require('mathjs');\r\n\r\nexport default class CustomGatesCreationModal extends React.Component<any> {\r\n\r\n  static openModalSubject = new Subject();\r\n\r\n  customStyles = {\r\n    content : {\r\n      height: '550px',\r\n      background: '#373b44',\r\n      border: 'none',\r\n      padding: \"0px\",\r\n      width: '600px',\r\n      marginLeft: 'calc(50vw - 332px)'\r\n    }\r\n  };\r\n\r\n  state = {\r\n    showModal: false,\r\n    matrixAValue: \"\",\r\n    matrixBValue: \"\",\r\n    matrixCValue: \"\",\r\n    matrixDValue: \"\",\r\n    nameCustomGate: \"\"\r\n  };\r\n\r\n  static openModal() {\r\n    this.openModalSubject.next();\r\n  }\r\n\r\n  componentDidMount() {\r\n    Modal.setAppElement('#app');\r\n    CustomGatesCreationModal.openModalSubject.subscribe(() => {\r\n      this.setState({ showModal: true });\r\n    });\r\n  }\r\n\r\n  handleCloseModal (value: any) {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n  addCustomGate() {\r\n    if (this.hasSomeInputEmpty()) {\r\n      const error = \"Necessário preencher todos os campos para criar a porta customizada.\";\r\n      toast.error(error);\r\n      return;\r\n    };\r\n    CustomGateManager.addCustomGate(\r\n      new CustomGate(this.state.nameCustomGate, [\r\n        [\r\n          math.complex(this.state.matrixAValue),\r\n          math.complex(this.state.matrixBValue)\r\n        ],\r\n        [\r\n          math.complex(this.state.matrixCValue),\r\n          math.complex(this.state.matrixDValue)\r\n        ]\r\n      ])\r\n    );\r\n    this.handleCloseModal(null);\r\n  }\r\n\r\n  handleInputChange = (event: any) => {\r\n    const target = event.target;\r\n    this.setState({\r\n      [target.name]: target.value\r\n    });\r\n  }\r\n\r\n  private hasSomeInputEmpty() {\r\n    return this.state.nameCustomGate === \"\" &&\r\n      this.state.matrixAValue === \"\" &&\r\n      this.state.matrixBValue === \"\" &&\r\n      this.state.matrixCValue === \"\" &&\r\n      this.state.matrixDValue === \"\";\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    CustomGatesCreationModal.openModalSubject.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n           isOpen={this.state.showModal}\r\n           contentLabel=\"Project\"\r\n           style={this.customStyles}\r\n           onRequestClose={() => this.handleCloseModal(null)}\r\n           overlayClassName=\"overlay\"\r\n        >\r\n        <div className=\"modal-header\">\r\n          <div className=\"modal-title\">\r\n            Criação de portas lógicas customizadas\r\n          </div>\r\n          <div className=\"modal-close-icon\" onClick={() => this.handleCloseModal(null)}>\r\n            X\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content\">\r\n          <div className=\"custom-gates-creation-modal--padding-content\">\r\n            <div className=\"custom-gates-creation-modal--text-center\">Adicione os valores da matrix de transformação da porta lógica.</div>\r\n            <div className=\"custom-gates-creation-modal--table-values\">\r\n              <div className=\"custom-gates-creation-modal--table-values-column\">\r\n                <input name=\"matrixAValue\" className=\"input-project\" value={this.state.matrixAValue} placeholder=\"U11\" onChange={this.handleInputChange}></input>\r\n                <input name=\"matrixBValue\" className=\"input-project\" value={this.state.matrixBValue} placeholder=\"U12\" onChange={this.handleInputChange}></input>\r\n              </div>\r\n              <div className=\"custom-gates-creation-modal--table-values-column\">\r\n                <input name=\"matrixCValue\" className=\"input-project\" value={this.state.matrixCValue} placeholder=\"U21\" onChange={this.handleInputChange}></input>\r\n                <input name=\"matrixDValue\" className=\"input-project\" value={this.state.matrixDValue} placeholder=\"U22\" onChange={this.handleInputChange}></input>\r\n              </div>\r\n            </div>\r\n            <div className=\"custom-gates-creation-modal--observation\">Você pode adicionar numeros complexos nas entradas.</div>\r\n            <div className=\"custom-gates-creation-modal--add\">\r\n              <div className=\"custom-gates-creation-modal--text-center\">\r\n                <input name=\"nameCustomGate\" className=\"input-project\" value={this.state.nameCustomGate} placeholder=\"Adicione um nome\" onChange={this.handleInputChange}></input>\r\n              </div>\r\n\r\n              <div className=\"custom-gates-creation-modal--text-center\">\r\n                <button className=\" default-button\" onClick={() => this.addCustomGate()}>Adicionar porta customizada</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ToastContainer></ToastContainer>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}","export default class ColorUtils {\r\n\r\n    public static hsvToRgb(h: number, s: number, v: number) {\r\n        let r = 0, g = 0, b = 0, i, f, p, q, t;\r\n        i = Math.floor(h * 6);\r\n        f = h * 6 - i;\r\n        p = v * (1 - s);\r\n        q = v * (1 - f * s);\r\n        t = v * (1 - (1 - f) * s);\r\n        switch (i % 6) {\r\n            /* eslint-disable */\r\n            case 0: r = v, g = t, b = p; break;\r\n            case 1: r = q, g = v, b = p; break;\r\n            case 2: r = p, g = v, b = t; break;\r\n            case 3: r = p, g = q, b = v; break;\r\n            case 4: r = t, g = p, b = v; break;\r\n            case 5: r = v, g = p, b = q; break;\r\n            /* eslint-enable */\r\n        }\r\n        return {\r\n            r: Math.round(r * 255),\r\n            g: Math.round(g * 255),\r\n            b: Math.round(b * 255)\r\n        };\r\n    }\r\n\r\n    public static rgbToHexNumber(r: number, g: number, b: number) {\r\n        return parseInt([r, g, b].map(x => x.toString(16).padStart(2, '0')).join(''), 16);\r\n    }\r\n\r\n}","import React from 'react';\r\nimport './HSVView.css';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport ColorUtils from '../../../../utils/ColorUtils';\r\n\r\nconst THREE = require(\"three-js\")();\r\nconst math = require('mathjs');\r\n\r\nexport default class HSVView extends React.Component<{\r\n  isActivated : boolean,\r\n  width: string,\r\n  height: string,\r\n  controls: boolean,\r\n  qubitsVector: number[]\r\n}> {\r\n  private mount: React.RefObject<HTMLDivElement> = React.createRef<HTMLDivElement>();\r\n  \r\n  createACube(width: number, height: number, lenght: number, x: number, y: number, z: number, color: any) {\r\n    const geometry = new THREE.BoxGeometry( width, height, lenght );\r\n    const material = new THREE.MeshBasicMaterial( {color } );\r\n    const cube = new THREE.Mesh( geometry, material );\r\n    cube.position.set(x, y, z);\r\n    return cube;\r\n  }\r\n\r\n  createAText(message: string, font: any) {\r\n    const geometry = new THREE.TextGeometry( message, {\r\n      font: font,\r\n      size: .07,\r\n      height: 0,\r\n    } );\r\n    const material = new THREE.LineBasicMaterial( { color: 0xffffff } );\r\n    const text =  new THREE.Mesh( geometry, material );\r\n    return text;\r\n  } \r\n\r\n  getHueValueFromQubit(qubit: any) : number {\r\n    const realValue = math.re(qubit);\r\n    const imaginaryValue = math.im(qubit);\r\n    let hue = 0;\r\n    if (realValue >=  0)\r\n      hue = math.atan(imaginaryValue / realValue);\r\n    else\r\n      hue = math.atan(imaginaryValue / realValue) + Math.PI;\r\n    return hue / (2 * Math.PI);\r\n  }\r\n\r\n  renderThreeJSCanvas() {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.OrthographicCamera( window.innerWidth / - 800, window.innerWidth / 800, \r\n      window.innerHeight / 800, window.innerHeight / - 800, 0.01, 1000 );\r\n    const renderer = new THREE.WebGLRenderer( { alpha: true } );\r\n    if (!this.props.width.includes(\"%\") && !this.props.height.includes(\"%\")) \r\n      renderer.setSize( parseInt(this.props.width), parseInt(this.props.height) );\r\n    else \r\n      renderer.setSize( window.innerWidth, window.innerHeight );\r\n    this.mount.current!.appendChild( renderer.domElement );\r\n    \r\n\r\n\r\n    const loader = new THREE.FontLoader();\r\n    loader.load('https://threejsfundamentals.org/threejs/resources/threejs/fonts/helvetiker_regular.typeface.json', (font: any) => {\r\n      const firstText = this.createAText(\"l0>\", font);\r\n      firstText.position.y = 1.1;\r\n      const secondText = this.createAText(\"l1>\", font);\r\n      secondText.position.y = -1.1;\r\n      if (this.props.controls) {\r\n\r\n      }\r\n    } );\r\n\r\n    let offsetX = 0.5;\r\n    let offsetY = 0.5;\r\n    let columnSize = Math.sqrt(this.props.qubitsVector.length);\r\n    if (columnSize !== Math.ceil(columnSize)) {\r\n      columnSize = Math.ceil(Math.sqrt(this.props.qubitsVector.length * 2));\r\n      offsetY = 0.15;\r\n    };\r\n    const flatHeight = 0.014 / columnSize;\r\n    const distanceBetweenCubes = 1.54 / columnSize;\r\n    const zoomSize = 1.4 / columnSize;\r\n    let ix = 0;\r\n    let iy = 0; \r\n    for (let qubit of this.props.qubitsVector) {\r\n      if ((ix - 1) % columnSize === (columnSize - 1)) {\r\n        iy++;\r\n        ix = 0;\r\n      }\r\n      const qubitPercentage = math.abs(math.pow(qubit, 2));\r\n      const height = flatHeight * (200*qubitPercentage);\r\n      let color = 0x808080;\r\n      if (qubitPercentage !== 0) {\r\n        const rgb = ColorUtils.hsvToRgb(this.getHueValueFromQubit(qubit) + 1.15, 1, 1);\r\n        color = ColorUtils.rgbToHexNumber(rgb.r, rgb.g, rgb.b);\r\n      }\r\n      const cube = this.createACube(\r\n          zoomSize,\r\n          height,\r\n          zoomSize, \r\n          distanceBetweenCubes*ix - offsetX, \r\n          height/2, \r\n          distanceBetweenCubes*iy - offsetY,\r\n          color);\r\n      var edges = new THREE.EdgesHelper( cube, 0x000000);\r\n      edges.material.linewidth = 10;\r\n      scene.add(edges);\r\n      scene.add(cube);\r\n      ix++;\r\n    }\r\n\r\n    camera.position.z = 10;\r\n    camera.isOrthographicCamera = true;\r\n    camera.position.x = 10;\r\n    camera.position.y = 10;\r\n    const controls = new OrbitControls( camera, renderer.domElement );\r\n    controls.target.set( 0, 0, 0 );\r\n    controls.enabled = this.props.controls;\r\n    controls.update();\r\n    const animate = () => {\r\n      requestAnimationFrame( animate );\r\n      renderer.render( scene, camera );\r\n      if (renderer.domElement) {\r\n        renderer.domElement.style.width = this.props.width;\r\n        renderer.domElement.style.height = this.props.height;\r\n      }\r\n    };\r\n\r\n    animate();\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      if (this.mount.current && this.props.isActivated) {\r\n        this.renderThreeJSCanvas();\r\n      }\r\n    }, 300);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n      <img className=\"hsv-view--color_line\" src=\"/images/hsvcolorline.png\"></img>\r\n      <div className=\"hsv-view--labels_color_line\"> \r\n        <div className=\"hsv-view--label_color_line\">-</div>\r\n        <div className=\"hsv-view--label_color_line\">i</div>\r\n        <div className=\"hsv-view--label_color_line\">+</div>\r\n        <div className=\"hsv-view--label_color_line\">-i</div>\r\n        <div className=\"hsv-view--label_color_line\">-</div>\r\n      </div>\r\n      <div className=\"hsv-view--canvas_center\" ref={this.mount} />\r\n    </div>\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { Subject } from 'rxjs';\r\nimport QuantumSchematicsManager from '../../QuantumSchematics/QuantumSchematicsManager';\r\nimport HSVView from './HSVView/HSVView';\r\nimport './HSVViewModal.css';\r\n\r\nexport default class HSVViewModal extends React.Component<any> {\r\n\r\n  static openModalSubject = new Subject();\r\n\r\n  customStyles = {\r\n    content : {\r\n      height: '80%',\r\n      background: '#373b44',\r\n      border: 'none',\r\n      padding: \"0px\"\r\n    }\r\n  };\r\n\r\n  state = {\r\n    showModal: false\r\n  };\r\n\r\n  static openModal() {\r\n    this.openModalSubject.next();\r\n  }\r\n\r\n  componentDidMount() {\r\n    Modal.setAppElement('#app');\r\n    HSVViewModal.openModalSubject.subscribe(() => {\r\n      this.setState({ showModal: true });\r\n    });\r\n  }\r\n\r\n  handleCloseModal (value: any) {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    HSVViewModal.openModalSubject.unsubscribe();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n           isOpen={this.state.showModal}\r\n           contentLabel=\"Project\"\r\n           style={this.customStyles}\r\n           onRequestClose={() => this.handleCloseModal(null)}\r\n           overlayClassName=\"overlay\"\r\n        >\r\n          <div className=\"modal-header\">\r\n            <div className=\"modal-title\">\r\n              Visualização HSV View\r\n            </div>\r\n            <div className=\"modal-close-icon\" onClick={() => this.handleCloseModal(null)}>\r\n              X\r\n            </div>\r\n          </div>\r\n          <HSVView isActivated={this.state.showModal} qubitsVector={QuantumSchematicsManager.getOutput()} height=\"70%\" width=\"70%\" controls={true}></HSVView>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { Subject } from 'rxjs';\r\nimport './NameChoiceModal.css';\r\n\r\nexport default class NameChoiceModal extends React.Component<any> {\r\n\r\n  static modalResultSubject = new Subject();\r\n  static openModalSubject = new Subject();\r\n\r\n  customStyles = {\r\n    content : {\r\n      height: '111px',\r\n      background: '#373b44',\r\n      border: 'none'\r\n    }\r\n  };\r\n\r\n  state = {\r\n    showModal: false,\r\n    projectName: ''\r\n  };\r\n\r\n  static openModal() : Subject<any> {\r\n    this.openModalSubject.next();\r\n    return this.modalResultSubject;\r\n  }\r\n\r\n  componentDidMount() {\r\n    Modal.setAppElement('#app');\r\n    NameChoiceModal.openModalSubject.subscribe(() => {\r\n      this.setState({ showModal: true });\r\n    });\r\n  }\r\n\r\n  handleCloseModal (value: any) {\r\n    this.setState({ showModal: false });\r\n    NameChoiceModal.modalResultSubject.next(value);\r\n    this.reloadSubscription();\r\n  }\r\n\r\n  reloadSubscription() {\r\n    NameChoiceModal.modalResultSubject.complete()\r\n    NameChoiceModal.modalResultSubject = new Subject();\r\n  }\r\n\r\n  updateInput = (event: any) => {\r\n    this.setState({projectName : event.target.value})\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    NameChoiceModal.modalResultSubject.unsubscribe();\r\n    NameChoiceModal.openModalSubject.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n           isOpen={this.state.showModal}\r\n           contentLabel=\"Project\"\r\n           style={this.customStyles}\r\n           onRequestClose={() => this.handleCloseModal(null)}\r\n           overlayClassName=\"overlay\"\r\n        >\r\n          <p className=\"title\">Escolha o nome para o arquivo do projeto:</p>\r\n          <input id=\"projectName\" className=\"input-project\" onChange={this.updateInput}></input>\r\n          <button className=\"confirm-button button-margin\" onClick={() => this.handleCloseModal(this.state.projectName)}>Exportar</button>\r\n          <button className=\"default-button button-margin\" onClick={() => this.handleCloseModal(null)}>Cancelar</button>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { Subject } from 'rxjs';\r\nimport QuantumSchematicsManager from '../../QuantumSchematics/QuantumSchematicsManager';\r\nimport SimulatorUtils from '../../../utils/SimulatorUtils';\r\nimport './QubitsValuesModal.css';\r\n\r\nconst math = require('mathjs');\r\n\r\nexport default class QubitsValuesModal extends React.Component<any> {\r\n\r\n  static openModalSubject = new Subject();\r\n\r\n  customStyles = {\r\n    content : {\r\n      height: '80%',\r\n      background: '#373b44',\r\n      border: 'none',\r\n      padding: \"0px\"\r\n    }\r\n  };\r\n\r\n  state = {\r\n    showModal: false\r\n  };\r\n\r\n  static openModal() {\r\n    this.openModalSubject.next();\r\n  }\r\n\r\n  componentDidMount() {\r\n    Modal.setAppElement('#app');\r\n    QubitsValuesModal.openModalSubject.subscribe(() => {\r\n      this.setState({ showModal: true });\r\n    });\r\n  }\r\n\r\n  handleCloseModal (value: any) {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n  getLabelRealAndImaginaryByIndex(index: number) {\r\n    const numberInComplexObj = this.getComplexNumberAtIndex(index);\r\n    return SimulatorUtils.getLabelRealAndImaginaryAValues(numberInComplexObj);\r\n  }\r\n\r\n  getQubitsPercentageLabel(index: number) {\r\n    const numberInComplexObj = math.abs(math.pow(this.getComplexNumberAtIndex(index), 2));\r\n    return SimulatorUtils.getPercentageLabel(index, numberInComplexObj);\r\n  }\r\n\r\n  private getComplexNumberAtIndex(index: number) {\r\n    const output = QuantumSchematicsManager.getOutput();\r\n    const numberAtPos = output[index];\r\n    return math.complex(numberAtPos == undefined ? 0 : numberAtPos);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    QubitsValuesModal.openModalSubject.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n           isOpen={this.state.showModal}\r\n           contentLabel=\"Project\"\r\n           style={this.customStyles}\r\n           onRequestClose={() => this.handleCloseModal(null)}\r\n           overlayClassName=\"overlay\"\r\n        >\r\n        <div className=\"modal-header\">\r\n          <div className=\"modal-title\">\r\n            Visualização de estados dos Qubits\r\n          </div>\r\n          <div className=\"modal-close-icon\" onClick={() => this.handleCloseModal(null)}>\r\n            X\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content\">\r\n          {SimulatorUtils.binaryCombinationsString(QuantumSchematicsManager.getSize()).map((label: string, i: number) =>\r\n              <div className=\"column--qubit\" key={i}>\r\n                <div className=\"column-content--qubit\">\r\n                  |{label}⟩\r\n                </div>\r\n                <div className=\"column-content--qubit column-content-close-box--qubit\">\r\n                  {this.getLabelRealAndImaginaryByIndex(i)}\r\n                </div>\r\n                <div className=\"column-content-end--qubit\">\r\n                  {this.getQubitsPercentageLabel(i)}\r\n                </div>\r\n              </div>\r\n          )}\r\n        </div>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}","export default class FileUtils {\r\n\r\n    protected static getGatesArrayObj(documentobj: any) {\r\n        const gateSets = [...documentobj.getElementsByClassName(\"gateSet\")];\r\n        const gateArray = [];\r\n        for ( let gateEl of gateSets) {\r\n            gateArray.push({\r\n            gate: gateEl.id.slice(0, -3),\r\n            x: parseInt(gateEl.parentElement.id.split(\"_\")[1]),\r\n            y: parseInt(gateEl.parentElement.id.split(\"_\")[2])\r\n        });\r\n        }\r\n        return gateArray;\r\n    }\r\n\r\n    protected static downloadFile(documentobj:any, data: any, filename: any, type:any ) {\r\n        let file = new Blob([data], {type: type});\r\n        if (window.navigator.msSaveOrOpenBlob)\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else {\r\n            let a = documentobj.createElement(\"a\"),\r\n                    url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            documentobj.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function() {\r\n              documentobj.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);  \r\n            }, 0); \r\n        }\r\n      }\r\n    \r\n}\r\n","import { Subject } from \"rxjs\";\r\nimport FileUtils from \"./FileUtils\";\r\n\r\nexport default class QJSFileUtils extends FileUtils {\r\n\r\n    static readImportedFile(event: any) {\r\n        const loadedFile = new Subject();\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        var file = event.target.files[0];\r\n        if (file) {\r\n        var reader = new FileReader();\r\n        reader.readAsText(file, \"UTF-8\");\r\n        reader.onload = (evt) => {\r\n            if (evt.target !== null) {\r\n                let parsedObj = null;\r\n                try {\r\n                    parsedObj = JSON.parse(evt.target.result as string);\r\n                    loadedFile.next(parsedObj);\r\n                } catch {\r\n                    // Tratamento exceção.\r\n                }\r\n            }\r\n        }\r\n        }\r\n        event.target.value = null;\r\n        return loadedFile;\r\n    }\r\n\r\n    static exportFile(documentobj: any, projectName: String) {\r\n        const fileArray = this.getGatesArrayObj(documentobj);\r\n        this.downloadFile(documentobj, JSON.stringify(fileArray), projectName + '.qjs', 'text');\r\n    }\r\n    \r\n}\r\n","import React from 'react';\r\nimport QuantumSchematicsManager from '../../components/QuantumSchematics/QuantumSchematicsManager';\r\nimport BlochSpheresViewModal from './BlochSpheresViewModal/BlochSpheresViewModal';\r\nimport CustomGatesCreationModal from './CustomGatesCreationModal/CustomGatesCreationModal';\r\nimport HSVViewModal from './HSVViewModal/HSVViewModal';\r\nimport NameChoiceModal from './NameChoiceModal/NameChoiceModal';\r\nimport QubitsValuesModal from './QubitsValuesModal/QubitsValuesModal';\r\nimport CustomGateManager from './CustomGateManager/CustomGateManager';\r\nimport ExamplesData from '../../assets/examples.json';\r\nimport QJSFileUtils from '../../utils/FileUtils/QJSFileUtils';\r\nimport './NavBar.css';\r\n\r\n\r\nexport default class NavBar extends React.Component<any> {\r\n  fileUploader : any;\r\n\r\n  componentDidMount() {\r\n    CustomGateManager.onChangeCustomGates().subscribe(()=> {\r\n      this.forceUpdate();\r\n    });\r\n  }\r\n\r\n  clean = QuantumSchematicsManager.clean;\r\n\r\n  saveQjsFile() {\r\n    NameChoiceModal.openModal().subscribe(projectName => {\r\n      if (projectName !== null) {\r\n        QuantumSchematicsManager.saveNewSchematics(projectName);\r\n      }\r\n    })\r\n  }\r\n\r\n  exportLaTeXFormat() {\r\n    NameChoiceModal.openModal().subscribe(projectName => {\r\n      if (projectName !== null) {\r\n        QuantumSchematicsManager.exportToLaTeX(projectName);\r\n      }\r\n    })\r\n  }\r\n\r\n  exportAsciiFormat() {\r\n    NameChoiceModal.openModal().subscribe(projectName => {\r\n      if (projectName !== null) {\r\n        QuantumSchematicsManager.exportToAscii(projectName);\r\n      }\r\n    })\r\n  }\r\n\r\n  openQjsFile = () => {\r\n    if (this.fileUploader) this.fileUploader.click();\r\n  }\r\n\r\n  openFileProccess = (event: any) => {\r\n    QJSFileUtils.readImportedFile(event).subscribe((gatesObj : any) => {\r\n      QuantumSchematicsManager.openSchematics(gatesObj);\r\n    })\r\n  }\r\n\r\n  openExample(jsonObjString: string) {\r\n    QuantumSchematicsManager.openSchematics(JSON.parse(jsonObjString));\r\n  }\r\n\r\n  getExamplesNav() {\r\n    return ExamplesData.examples.map((example, index) => (\r\n      <a key={index} onClick={() => {if (example.data) this.openExample(example.data)}}>\r\n        {example.name} {example.subnavs && '▸'}\r\n        {this.getExampleSubnav(example)}\r\n      </a>\r\n    ));\r\n  }\r\n\r\n  private getExampleSubnav(example: any) {\r\n    return example.subnavs && (\r\n      <div className=\"subnav--subitem\">\r\n        {example.subnavs.map((subnav: any, indexSub: number) => (\r\n          <div className=\"subnav--subitem-link\" key={indexSub} onClick={() => {if (subnav.data) this.openExample(subnav.data)}}>{subnav.name}</div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <HSVViewModal></HSVViewModal>\r\n        <NameChoiceModal></NameChoiceModal>\r\n        <QubitsValuesModal></QubitsValuesModal>\r\n        <BlochSpheresViewModal></BlochSpheresViewModal>\r\n        <CustomGatesCreationModal></CustomGatesCreationModal>\r\n        <div className=\"navbar--button\" onClick={this.clean}>\r\n          Limpar\r\n        </div>\r\n        <div className=\"navbar--button\" onClick={this.openQjsFile}>\r\n          Abrir\r\n        </div>\r\n        <div className=\"navbar--button\" onClick={this.saveQjsFile}>\r\n          Salvar\r\n        </div>\r\n        <div className=\"navbar--button-with-subnav\">\r\n          <div className=\"navbar--button\">\r\n            <div className=\"navbar--arrow-icon\">▼</div> Exportar\r\n          </div>\r\n          <div className=\"subnav--content\">\r\n            <a onClick={this.exportLaTeXFormat}>LaTeX ...</a>\r\n            <a onClick={this.exportAsciiFormat}>ASCII text ...</a>\r\n          </div>\r\n        </div>\r\n        <div className=\"navbar--button-with-subnav\">\r\n          <div className=\"navbar--button\">\r\n            <div className=\"navbar--arrow-icon\">▼</div> Visualização\r\n          </div>\r\n          <div className=\"subnav--content\">\r\n            <a onClick={() => QubitsValuesModal.openModal()}>Visualização de estados dos Qubits</a>\r\n            <a onClick={() => BlochSpheresViewModal.openModal()}>Modelo de esferas de Bloch</a>\r\n            <a onClick={() => HSVViewModal.openModal()}>HSV View 2D/3D</a>\r\n          </div>\r\n        </div>\r\n        <div className=\"navbar--button-with-subnav\">\r\n          <div className=\"navbar--button\">\r\n            <div className=\"navbar--arrow-icon\">▼</div> Customização\r\n          </div>\r\n          <div className=\"subnav--content\">\r\n            <a onClick={() => CustomGatesCreationModal.openModal()}>Criar porta customizada</a>\r\n            {CustomGateManager.hasCustomGates() ? \r\n              CustomGateManager.isShownCustomGates() ?\r\n                <a onClick={() => CustomGateManager.hideCustomGates()}>Esconder portas customizadas</a> :\r\n                <a onClick={() => CustomGateManager.showCustomGates()}>Mostrar portas customizadas</a>\r\n              : undefined}\r\n          </div>\r\n        </div>\r\n        <div className=\"navbar--button-with-subnav\">\r\n          <div className=\"navbar--button\">\r\n            <div className=\"navbar--arrow-icon\">▼</div> Exemplos\r\n          </div>\r\n          <div className=\"subnav--content\">{this.getExamplesNav()}</div>\r\n        </div>\r\n        <input type='file' id='file' ref={(ref) => this.fileUploader = ref} onChange={this.openFileProccess} style={{display: 'none'}}/>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport SimulatorUtils from '../../utils/SimulatorUtils';\r\nimport CustomGateManager from '../NavBar/CustomGateManager/CustomGateManager';\r\nimport './ToolBox.css';\r\n\r\nexport default class ToolBox extends React.Component<{callbackPlaying : any}> {\r\n\r\n  state = {\r\n    isPlaying: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    CustomGateManager.onChangeCustomGates().subscribe(()=> {\r\n      this.forceUpdate();\r\n    });\r\n  }\r\n\r\n  onClickGate(gateId: String) {\r\n    SimulatorUtils.cloneGate(gateId);\r\n  }\r\n\r\n  togglePlayButton() {\r\n    this.setState({\r\n      isPlaying: !this.state.isPlaying\r\n    });\r\n    this.props.callbackPlaying(!this.state.isPlaying);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toolbox\">\r\n        {\r\n          this.state.isPlaying ? \r\n          <div className=\"pause-button\" onClick={() => this.togglePlayButton()}>❚❚</div> :\r\n          <div className=\"play-button\" onClick={() => this.togglePlayButton()}>►</div>\r\n        }\r\n        <div id=\"HGate\" className=\"toolbox-button\" onMouseDown={() => this.onClickGate('HGate')} >\r\n          H\r\n        </div>\r\n        <div id=\"XGate\" className=\"toolbox-button\" onMouseDown={() => this.onClickGate('XGate')}>\r\n          X\r\n        </div>\r\n        <div id=\"YGate\" className=\"toolbox-button\" onMouseDown={() => this.onClickGate('YGate')}>\r\n          Y\r\n        </div>\r\n        <div id=\"ZGate\" className=\"toolbox-button\" onMouseDown={() => this.onClickGate('ZGate')}>\r\n          Z\r\n        </div>\r\n        <div id=\"SGate\" className=\"toolbox-button\" onMouseDown={() => this.onClickGate('SGate')}>\r\n          S\r\n        </div>\r\n        <div id=\"TGate\" className=\"toolbox-button\" onMouseDown={() => this.onClickGate('TGate')}>\r\n          T\r\n        </div>\r\n        <div id=\"ControlGate\" className=\"toolbox-button\" onMouseDown={() => this.onClickGate('ControlGate')}>\r\n          •\r\n        </div>\r\n        {CustomGateManager.isShownCustomGates() ? \r\n          [<div className=\"toolbox--separation\"></div>]\r\n            .concat(CustomGateManager.getCustomGates().map((gate, index) => \r\n              <div id={`${gate.getUuId()}-CustomGate`} className=\"toolbox-button\" key={index} onMouseDown={() => this.onClickGate(`${gate.getUuId()}-CustomGate`)}>\r\n                {gate.getPrefix()}  \r\n              </div>\r\n            )) : \r\n          CustomGateManager.hasCustomGates() ? \r\n            <div className=\"toolbox--more-button\" onMouseDown={() => CustomGateManager.showCustomGates()} > ••• </div> : undefined}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","import SimulatorUtils from \"../SimulatorUtils\";\r\nimport FileUtils from \"./FileUtils\";\r\n\r\nexport default class LaTeXFileUtils extends FileUtils {\r\n\r\n    static createLaTex(documentobj: any, quantityOfQubits: number) {\r\n        const minValueLength = 4;\r\n        const fileArray = this.getGatesArrayObj(documentobj);\r\n        const quantityArray = new Array(quantityOfQubits).fill(null);\r\n        const yNumbers = fileArray.map(obj => (obj.y + 1))\r\n        const lengthSize = Math.max(...yNumbers, minValueLength);\r\n        const lengthArray = new Array(lengthSize).fill(null);\r\n\r\n        return `\\\\documentclass[10pt]{standalone}\\n` +\r\n               `\\\\usepackage{tikz}\\n` + \r\n               `\\\\usetikzlibrary{backgrounds,fit,decorations.pathreplacing,calc}\\n` +\r\n               `\\\\newcommand{\\\\ket}[1]{\\\\ensuremath{\\\\left|#1\\\\right\\\\rangle}}\\n` +\r\n               `\\\\begin{document}\\n` +\r\n               `\\t\\\\begin{tikzpicture}[thick]\\n`+\r\n               `\\t\\\\tikzstyle{operator} = [draw,fill=white,minimum size=1.5em]\\n` +\r\n               `\\t\\\\tikzstyle{phase} = [draw,fill,shape=circle,minimum size=5pt,inner sep=0pt]\\n` +\r\n               `\\t\\\\tikzstyle{surround} = [fill=blue!10,thick,draw=black,rounded corners=2mm]\\n` +\r\n               `\\t%\\n${quantityArray.length ? `\\n\\t\\\\matrix[row sep=0.4cm, column sep=0.8cm] (circuit) {\\n\\n` +\r\n                    this.getNodes(quantityArray, lengthArray, fileArray) +\r\n                    \"\\t};\\n\\n\" + \r\n                    `\\t\\\\begin{pgfonlayer}{background}\\n` +\r\n                        this.getObjectsToDraw(quantityArray, fileArray, lengthSize) +\r\n                    `\\t\\\\end{pgfonlayer}\\n`\r\n               : ''}` +\r\n               `\\t%\\n` +\r\n               `\\t\\\\end{tikzpicture}\\n` +\r\n               `\\\\end{document}`;\r\n    }\r\n\r\n    private static getNodes(quantityArray: any[], lengthArray: any[], fileArray: any[]) {\r\n        const nodes = quantityArray.map((v, i) => (\r\n            `\\t\\\\node (q${i}) {\\\\ket{0}}; &\\n` +\r\n            `${lengthArray.map((v, j) => this.definedNodeLine(fileArray, i, j)).join('')}` +\r\n            `\\t\\\\coordinate (end${i}); \\\\\\\\ \\n`\r\n        ));\r\n        return nodes.join('');\r\n    }\r\n\r\n    private static definedNodeLine(fileArray: any, i: number, j: number) {\r\n        const obj = fileArray.find((obj: any) => obj.x === i && obj.y === j);\r\n        if (obj) {\r\n            const gatePrefix = this.getGatePrefix(obj);\r\n            if (gatePrefix === \"CL\") return `\\t\\\\node[phase] (CL${i}${j}) {}; &\\n`;\r\n            return `\\t\\\\node[operator] (${gatePrefix}${i}${j}) {${gatePrefix}}; &\\n`;\r\n        }\r\n        return `\\t&\\n`;\r\n    }\r\n\r\n    private static getObjectsToDraw(quantityArray: any, fileArray: any, lengthSize:number) {\r\n        return `\\t\\t\\\\draw[thick] ` +\r\n        `${quantityArray.map((v: any, i: number) => ( ` (q${i}) -- (end${i})`)).join('')}` +\r\n        `${this.getControlledGatesLines(fileArray, lengthSize)}`\r\n        + `;\\n`;\r\n    }\r\n\r\n    private static getControlledGatesLines(fileArray: any, lengthSize: number) {\r\n        let linesResult = \"\";\r\n        for (let i = 0; i < lengthSize; i++) {\r\n            const gatesInLine = fileArray.filter((obj: any) => obj.y === i);\r\n            const controlledGate = gatesInLine.find((obj: any) => SimulatorUtils.isControlGate(obj.gate));\r\n            if (controlledGate) {\r\n                for (let objGate of gatesInLine) {\r\n                    if (objGate !== controlledGate) {\r\n                        const gatePrefix = this.getGatePrefix(objGate)\r\n                        linesResult += ` (${gatePrefix}${objGate.x}${objGate.y}) `;\r\n                        linesResult += `--`;\r\n                        linesResult += ` (CL${controlledGate.x}${controlledGate.y})`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return linesResult;\r\n    }\r\n\r\n    private static getGatePrefix(gateObj: any) {\r\n        if (SimulatorUtils.isControlGate(gateObj.gate)) return \"CL\";\r\n        return gateObj.gate.replace(\"Gate\", \"\");\r\n    }\r\n\r\n    static exportFile(documentobj: any, projectName: String, quantityOfQubits: number) {\r\n        this.downloadFile(documentobj, this.createLaTex(documentobj, quantityOfQubits), projectName + '.tex', 'text');\r\n    }\r\n    \r\n}\r\n","import SimulatorUtils from \"../SimulatorUtils\";\r\nimport FileUtils from \"./FileUtils\";\r\n\r\nexport default class AsciiFileUtils extends FileUtils {\r\n\r\n    private static IDENTITY_GATE = \"I\";\r\n\r\n    static createAscii(documentobj: any, quantityOfQubits: number) {\r\n        const fileArray = this.getGatesArrayObj(documentobj);\r\n        const yNumbers = fileArray.map(obj => (obj.y + 1))\r\n        const lengthSize = Math.max(...yNumbers, quantityOfQubits);\r\n        let resultContent = \"\";\r\n        for (let i = 0; i < quantityOfQubits; i++) {\r\n            for (let j = 0; j < lengthSize; j++) {\r\n                const controlledGatesInLine = fileArray.filter((obj: any) => obj.y === j && SimulatorUtils.isControlGate(obj.gate));\r\n                resultContent += controlledGatesInLine.length ? \r\n                        this.defineGateSimbolControlled(fileArray, i, j):\r\n                        this.defineGateSimbolNotControlled(fileArray, i, j);\r\n                resultContent += \"-\";\r\n            }\r\n            resultContent = resultContent.slice(0, -1);\r\n            resultContent += \"\\n\";\r\n        }\r\n        return resultContent;\r\n    }\r\n\r\n    private static defineGateSimbolNotControlled(fileArray: any, i: number, j: number) {\r\n        const obj = fileArray.find((obj: any) => obj.x === i && obj.y === j);\r\n        if (obj) {\r\n           return this.getGatePrefix(obj); \r\n        }\r\n        return this.IDENTITY_GATE;\r\n    }\r\n\r\n    private static defineGateSimbolControlled(fileArray: any, i: number, j: number) {\r\n        const firstControlledGateObj = fileArray.find((obj: any) => obj.y === j && !SimulatorUtils.isControlGate(obj.gate));\r\n        const obj = fileArray.find((obj: any) => obj.x === i && obj.y === j);\r\n        const controlGateAnnotation = \"#0\";\r\n        const controlledGateAnnotation = \"#1\";\r\n        const spacingAnnotation = \"--\";\r\n        if (firstControlledGateObj && obj) {\r\n            if (SimulatorUtils.isControlGate(obj.gate)) \r\n                return this.getGatePrefix(firstControlledGateObj) + controlGateAnnotation;\r\n            if (firstControlledGateObj === obj) \r\n                return this.getGatePrefix(firstControlledGateObj) + controlledGateAnnotation;\r\n            return obj.gate + spacingAnnotation;\r\n        } else {\r\n            return this.IDENTITY_GATE + spacingAnnotation;\r\n        }\r\n    }\r\n\r\n    private static getGatePrefix(gateObj: any) {\r\n        return gateObj.gate.replace(\"Gate\", \"\");\r\n    }\r\n\r\n\r\n    static exportFile(documentobj: any, projectName: String, quantityOfQubits: number) {\r\n        this.downloadFile(documentobj, this.createAscii(documentobj, quantityOfQubits), projectName + '.txt', 'text');\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport QuantumSchematicsManager from './QuantumSchematicsManager';\r\nimport QuantumLogicGateTrasform from '../../processing/QuantumLogicGateTrasform';\r\nimport LaTeXFileUtils from '../../utils/FileUtils/LaTeXFileUtils';\r\nimport QJSFileUtils from '../../utils/FileUtils/QJSFileUtils';\r\nimport AsciiFileUtils from '../../utils/FileUtils/AsciiFileUtils';\r\nimport SimulatorUtils from \"../../utils/SimulatorUtils\";\r\nimport _ from 'underscore';\r\nimport './QuantumSchematics.css';\r\n\r\nconst documentobj: any = document ? document : {};\r\n\r\nconst getColumnsOfGates = () => {\r\n  const length = document.querySelectorAll(\"[id^='table-box_0']\").length;\r\n  let gates = [];\r\n  for (let index = 0; index < length; index++) {\r\n    const column : Array<any> = [];\r\n    document.querySelectorAll(`[id^='table-box_'][id$='_${index}']`).forEach(e => {\r\n      const gateEl = e.getElementsByClassName(\"gateSet\")[0];\r\n      column.push(gateEl ? gateEl.id : null);\r\n    });\r\n    if (column.length !== 0) gates.push(column);\r\n  }\r\n  return gates;\r\n}\r\n\r\nexport default class QuantumSchematics extends React.Component<{isPlaying : boolean}> {\r\n\r\n  state = {\r\n    quatumColumns: 4,\r\n    qubitsInputNr: Array(4).fill(0),\r\n    qubitsOutputVector: [1].concat(Array(15).fill(0)),\r\n  };\r\n\r\n  componentDidMount() {\r\n    QuantumSchematicsManager.setData(this.state.quatumColumns, this.state.qubitsOutputVector);\r\n    QuantumSchematicsManager.onClean().subscribe(() => this.onClean());\r\n    QuantumSchematicsManager.onOpenNewSchematics().subscribe((gatesObj: any) => this.onOpenSchematics(gatesObj));\r\n    QuantumSchematicsManager.onSaveSchematics().subscribe((projectName : String) => this.onSaveSchematics(projectName));\r\n    QuantumSchematicsManager.onExportSchematicsToLaTeX().subscribe((projectName : String) => this.onExportSchematicsToLatex(projectName));\r\n    QuantumSchematicsManager.onExportSchematicsToAscii().subscribe((projectName : String) => this.onExportSchematicsToAscii(projectName));\r\n    QuantumSchematicsManager.onUpdateSchematics().subscribe(() => this.forceUpdate());\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    QuantumSchematicsManager.setData(this.state.quatumColumns, this.state.qubitsOutputVector);\r\n    if (this.props.isPlaying) {\r\n      const beginProcessingTime = Date.now();\r\n      this.generateOutput();\r\n      const endProcessingTime = Date.now();\r\n      QuantumSchematicsManager.setSchematicsExecutionTime(endProcessingTime - beginProcessingTime);\r\n    }\r\n  }\r\n\r\n  private getQubitsVector() {\r\n    return this.state.qubitsInputNr.map(n => \r\n      SimulatorUtils.createQubitFromKenetNotation(SimulatorUtils.defineKenetQbitFromNumber(n))\r\n    );\r\n  }\r\n\r\n  private generateOutput() {\r\n    const oldOutputState = [...this.state.qubitsOutputVector];\r\n    let inputVector = QuantumLogicGateTrasform.createInputVectorFromQubits(this.getQubitsVector());\r\n    let columnsOfGates = getColumnsOfGates();\r\n    this.state.qubitsOutputVector = this.applyGatesTransformationToInput(inputVector, columnsOfGates).flat();\r\n    if (!_.isEqual(oldOutputState, this.state.qubitsOutputVector)) {\r\n      this.setState({\r\n        qbitsOutputMatrix: this.state.qubitsOutputVector\r\n      });\r\n    }\r\n  }\r\n\r\n  private applyGatesTransformationToInput(inputVector: number[][],columnsOfGates: string[][]): number[][] {\r\n    for (let columnOfGates of columnsOfGates) {\r\n      const hasControlGates = !!columnOfGates.find(gate => SimulatorUtils.isControlGate(gate));\r\n      const controlGatesPosition = hasControlGates ? columnOfGates.map(gate => SimulatorUtils.isControlGate(gate)) : [];\r\n      const arrayOfTransformationMatrix = columnOfGates.map(e => SimulatorUtils.qGateTransformingByString(e));\r\n      inputVector = hasControlGates ? \r\n        QuantumLogicGateTrasform.transform(inputVector, arrayOfTransformationMatrix, controlGatesPosition) :\r\n        QuantumLogicGateTrasform.transform(inputVector, arrayOfTransformationMatrix) ;\r\n    }\r\n    return inputVector;\r\n  }\r\n\r\n  changeQubitRotation(index: number) {\r\n    this.state.qubitsInputNr[index]++;\r\n    this.state.qubitsInputNr[index] = this.state.qubitsInputNr[index] % 6;\r\n    this.setState({qbits: this.state.qubitsInputNr});\r\n    this.forceUpdate();\r\n  }\r\n\r\n  addLine() {\r\n    this.state.qubitsInputNr.push(0);\r\n    this.setState({\r\n      qbits: this.state.qubitsInputNr,\r\n      quatumColumns: this.state.quatumColumns + 1,\r\n      qbitsOutputVector: []\r\n    });\r\n  }\r\n\r\n  removeLine() {\r\n    this.state.qubitsInputNr.pop();\r\n    this.setState({\r\n      qbits: this.state.qubitsInputNr,\r\n      quatumColumns: this.state.quatumColumns - 1,\r\n      qbitsOutputVector: []\r\n    });\r\n  }\r\n\r\n  onClean() {\r\n    const gateSets = [...documentobj.getElementsByClassName(\"gateSet\")];\r\n    for ( let gateEl of gateSets) {\r\n      gateEl.remove();\r\n    }\r\n    this.forceUpdate();\r\n  }\r\n\r\n  onOpenSchematics = (gatesObj: any) => {\r\n    this.onClean()\r\n    SimulatorUtils.addAllGatesInTable(gatesObj)\r\n  };\r\n  \r\n  onSaveSchematics = (projectName: String) => QJSFileUtils.exportFile(documentobj, projectName);\r\n  onExportSchematicsToLatex = (projectName: String) => LaTeXFileUtils.exportFile(documentobj, projectName, this.state.quatumColumns);\r\n  onExportSchematicsToAscii = (projectName: String) => AsciiFileUtils.exportFile(documentobj, projectName, this.state.quatumColumns);\r\n\r\n  isLastRow(index: number) {\r\n    return this.state.quatumColumns === (index + 1);\r\n  }\r\n\r\n  hasControllerGateLine(rowIndex: number, columnIndex: number) : boolean {\r\n    const rowFinalIndex = this.state.quatumColumns - 1;\r\n    const checkGate = (index: number) => {\r\n      const tableColumn = document.getElementById(`table-box_${index}_${columnIndex}`);\r\n      return tableColumn && Array.from(tableColumn.children).filter(children => children.id.includes(\"Set\")).length ? index : null;\r\n    };\r\n    const getBeginPos = () => {\r\n      for (let index = 0; index <= rowFinalIndex; index++) {\r\n        let gateChecked = checkGate(index);\r\n        if (gateChecked !== null) return gateChecked;\r\n      }\r\n      return rowFinalIndex;\r\n    };\r\n    const getFinalPos = () => {\r\n      for (let index = rowFinalIndex; index >= 0; index--) {\r\n        let gateChecked = checkGate(index);\r\n        if (gateChecked !== null) return gateChecked;\r\n      }\r\n      return 0;\r\n    };\r\n    const hasDiferentGates = () => {\r\n      const gateArray = [];\r\n      for (let index = 0; index <= rowFinalIndex; index++) {\r\n        const tableColumn = document.getElementById(`table-box_${index}_${columnIndex}`);\r\n        const arrayTableColumn = tableColumn ? Array.from(tableColumn.children) : [];\r\n        const gate = arrayTableColumn.filter(children => children.id.includes(\"Set\"))[0];\r\n        if (gate) gateArray.push(gate);\r\n      }\r\n      const quantityOfGates = gateArray.filter(children => children.id.includes(\"Set\")).length;\r\n      const quantityOfControlGates = gateArray.filter(children => children.id.includes(\"ControlGateSet\")).length;\r\n      const quantityGatesDiferentFromControl = gateArray.filter(children => !children.id.includes(\"ControlGateSet\")).length;\r\n      return quantityOfGates !== quantityOfControlGates && quantityOfGates !== quantityGatesDiferentFromControl;\r\n    };\r\n    const beginPos = getBeginPos();\r\n    const endPos = getFinalPos();\r\n    return beginPos <= rowIndex && endPos > rowIndex && hasDiferentGates();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    QuantumSchematicsManager.unsubcribeSubjects();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"quantumSchematics\" className=\"quantum-schematics\">\r\n        <table>\r\n            <thead></thead>\r\n            <tbody>\r\n            {[...Array(this.state.quatumColumns)].map((x, i) =>\r\n              <tr key={i}>\r\n              <td className=\"table-quantum-number\">\r\n                <div className=\"qubit-simbol\" onClick={() => this.changeQubitRotation(i)}>\r\n                  {SimulatorUtils.defineKenetQbitFromNumber(this.state.qubitsInputNr[i])}\r\n                </div>\r\n              </td>\r\n              <td className=\"q-box table-quantum-number\">Q{i + 1}</td>\r\n              {[...Array(14)].map((x, i2) =>\r\n                <td id={`table-box_${i}_${i2}`} key={i2} className=\"table-box\"><hr className=\"quantum-box\">\r\n                  </hr>\r\n                  {!this.isLastRow(i) && this.hasControllerGateLine(i, i2) && <div id=\"controlline\" className=\"control-gate--bottom-line\"></div> }\r\n                </td>\r\n              )}\r\n              <td className=\"table-quantum-number table-mensurement-number-box\">\r\n                <div className=\"mensurement-number-box\">\r\n                  {SimulatorUtils.getSpecificQubitMensuramentLabel(this.state.qubitsOutputVector, this.state.quatumColumns, i)}\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            )}\r\n            </tbody>\r\n        </table>\r\n        <div className=\"change-button-box\">\r\n          <button className=\"change-table-button\" onClick={() => this.addLine()}>+</button>\r\n          {this.state.quatumColumns > 1 && \r\n           <button className=\"change-table-button\" onClick={() => this.removeLine()}>-</button>}\r\n        </div>\r\n        {QuantumSchematicsManager.isActivePerformanceStatistics() \r\n          && <div className=\"quantum-schematics--statistics\"> Tempo de atualização: {QuantumSchematicsManager.getSchematicsExecutionTime()}ms</div>}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport ToolBox from './components/ToolBox/ToolBox';\r\nimport QuantumSchematics from './components/QuantumSchematics/QuantumSchematics';\r\nimport QuantumSchematicsManager from './components/QuantumSchematics/QuantumSchematicsManager';\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    isPlaying: false\r\n  };\r\n\r\n  onChangePlayState = (state: boolean) => {\r\n    this.setState({ isPlaying: state });\r\n  }\r\n\r\n  onKeyPressed(event: any) {\r\n    const keycodeStatistics = \"KeyS\";\r\n    if (event.code === keycodeStatistics) {\r\n      QuantumSchematicsManager.togglePerformanceStatistics();\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"app\" className=\"App\" tabIndex={0} onKeyDown={(event) => this.onKeyPressed(event)}>\r\n        <NavBar></NavBar>\r\n        <ToolBox callbackPlaying={this.onChangePlayState}></ToolBox>\r\n        <QuantumSchematics isPlaying={this.state.isPlaying}></QuantumSchematics>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport firebase from 'firebase/app';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyAl_RhVK-B42FyfJIisSjNwD51e4VsnsO8\",\r\n    authDomain: \"quantumjs-9e2ff.firebaseapp.com\",\r\n    projectId: \"quantumjs-9e2ff\",\r\n    storageBucket: \"quantumjs-9e2ff.appspot.com\",\r\n    messagingSenderId: \"1040130958370\",\r\n    appId: \"1:1040130958370:web:f0caf76eb2fbf13c5b967b\"\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","var map = {\n\t\"./AdaptiveToneMappingPass.js\": 70,\n\t\"./BasicShader.js\": 71,\n\t\"./BleachBypassShader.js\": 72,\n\t\"./BlendShader.js\": 73,\n\t\"./BloomPass.js\": 74,\n\t\"./BokehPass.js\": 75,\n\t\"./BokehShader.js\": 76,\n\t\"./BokehShader2.js\": 77,\n\t\"./BrightnessContrastShader.js\": 78,\n\t\"./CanvasRenderer.js\": 79,\n\t\"./ColorCorrectionShader.js\": 80,\n\t\"./ColorifyShader.js\": 81,\n\t\"./ConvolutionShader.js\": 82,\n\t\"./CopyShader.js\": 83,\n\t\"./DDSLoader.js\": 84,\n\t\"./DOFMipMapShader.js\": 85,\n\t\"./DigitalGlitch.js\": 86,\n\t\"./DotScreenPass.js\": 87,\n\t\"./DotScreenShader.js\": 88,\n\t\"./EdgeShader.js\": 89,\n\t\"./EdgeShader2.js\": 90,\n\t\"./EffectComposer.js\": 91,\n\t\"./FXAAShader.js\": 92,\n\t\"./FilmPass.js\": 93,\n\t\"./FilmShader.js\": 94,\n\t\"./FocusShader.js\": 95,\n\t\"./FresnelShader.js\": 96,\n\t\"./GammaCorrectionShader.js\": 97,\n\t\"./GlitchPass.js\": 98,\n\t\"./HorizontalBlurShader.js\": 99,\n\t\"./HorizontalTiltShiftShader.js\": 100,\n\t\"./HueSaturationShader.js\": 101,\n\t\"./JSONLoader.js\": 102,\n\t\"./KaleidoShader.js\": 103,\n\t\"./LuminosityShader.js\": 104,\n\t\"./MTLLoader.js\": 105,\n\t\"./MarchingCubes.js\": 106,\n\t\"./MaskPass.js\": 107,\n\t\"./MirrorShader.js\": 108,\n\t\"./NormalMapShader.js\": 109,\n\t\"./OBJLoader.js\": 110,\n\t\"./OceanShaders.js\": 111,\n\t\"./OrbitControls.js\": 112,\n\t\"./ParallaxShader.js\": 113,\n\t\"./Projector.js\": 114,\n\t\"./RGBShiftShader.js\": 115,\n\t\"./RenderPass.js\": 116,\n\t\"./SSAOShader.js\": 117,\n\t\"./SVGLoader.js\": 118,\n\t\"./SavePass.js\": 119,\n\t\"./SepiaShader.js\": 120,\n\t\"./ShaderPass.js\": 121,\n\t\"./TechnicolorShader.js\": 122,\n\t\"./TexturePass.js\": 123,\n\t\"./ToneMapShader.js\": 124,\n\t\"./TriangleBlurShader.js\": 125,\n\t\"./UnpackDepthRGBAShader.js\": 126,\n\t\"./VerticalBlurShader.js\": 127,\n\t\"./VerticalTiltShiftShader.js\": 128,\n\t\"./VignetteShader.js\": 129\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 69;"],"sourceRoot":""}